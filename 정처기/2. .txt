29. 데이터베이스 개요
  1) 데이터저장소
    - 데이터들을 논리적인 구조로 조직화하거나, 물리적인 공간에 구축한 것
    - 논리 데이터저장소
      - 데이터 및 데이터 간의 연관성, 제약조건을 식별하여 논리적인 구조로 조직화한 것
    - 물리 데이터저장소
      - 논리 데이터저장소를 소프트웨어가 운용될 환경의 물리적 특성을 고려하여 실제 저장장치에 저장한 것

  2) 데이터베이스(Database)
    - 여러 사람에 의해 공동으로 사용될 데이터를 중복을 배제하여 통합하고, 쉽게 접근하여 처리할 수 있도록
      저장장치에 저장하여 항상 사용할 수 있도록 운영하는 운영 데이터
    - 데이터베이스 구분
      - 통합된 데이터(Integrated Data) : 자료의 중복을 배제한 데이터의 모임 
      - 저장된 데이터(Stored Data)     : 컴퓨터가 접근할 수 있는 저장 매체에 저장된 자료
      - 운영 데이터(Operational Data)  : 조직의 고유한 업무를 수행하는 데 반드시 필요한 자료
      - 공용 데이터(Shared Data)       : 여러 응용 시스템들이 공동으로 소유하고 유지하는 자료

  3) DBMS(DataBase Management System: 데이터베이스 관리 시스템)
    - 사용자의 요구에 따라 정보를 생성해주고, 데이터베이스를 관리해주는 소프트웨어
    - 기존의 파일 시스템이 갖는 데이터의 종속성과 중복성의 문제를 해결하기 위해 제안된 시스템
    - DBMS의 필수 기능 3가지
      - 정의(Definition) 기능
        - 데이터의 형과 구조에 대한 정의, 이용 방식, 제약 조건 등을 명시하는 기능
      - 조작(Manipulation) 기능
        - 데이터 검색, 갱신, 삽입, 삭제 등을 위해 인터페이스 수단을 제공하는 기능
      - 제어(Control) 기능
        - 데이터의 무결성, 보안, 권한 검사, 병행 제어를 제공하는 기능

  4) 데이터의 독립성
    - 논리적 독립성
      - 응용 프로그램과 데이터베이스를 독립시킴으로써, 
        데이터의 논리적 구조를 변경시키더라도 응용 프로그램은 영향을 받지 않음
    - 물리적 독립성
      - 응용 프로그램과 보조기억장치 같은 물리적 장치를 독립시킴으로써,
        디스크를 추가/변경하더라도 응용 프로그램은 영향을 받지 않음

  5) 스키마(Schema)
    - 데이터베이스의 구조와 제약조건에 관한 전반적인 명세를 기술한 것
    - 외부 스키마
      - 사용자나 응용 프로그래머가 각 개인의 입장에서 필요로 하는 데이터베이스의 논리적 구조를 정의한 것
    - 개념 스키마
      - 데이터베이스의 전체적인 논리적 구조
      - 모든 응용 프로그램이나 사용자들이 필요로 하는 데이터를 종합한 조직 전체의 데이터베이스
      - 하나만 존재함
    - 내부 스키마
      - 물리적 저장장치의 입장에서 본 데이터베이스 구조
      - 실제로 저장될 레코드의 형식, 저장 데이터 항목의 표현 방법, 내부 레코드의 물리적 순서 등을 나타냄

30. 데이터베이스 설계
  1) 데이터베이스 설계
    - 사용자의 요구를 분석하여 그것들을 컴퓨터에 저장할 수 있는 데이터베이스의 구조에 맞게 변형 후
      DBMS 데이터베이스를 구현하여 일반 사용자들이 사용하게 하는 것
  
  2) 데이터베이스 설계 시 고려사항
    - 무결성
      - 삽입, 삭제, 갱신 등의 연산 후에도 데이터베이스에 저장된 데이터가 정해진 제약 조건을 항상 만족해야 함
    - 일관성
      - 데이터베이스에 저장된 데이터들 사이나, 특정 질의에 대한 응답이 처음부터 끝까지 변함없이 일정해야 함
    - 회복
      - 시스템에 장애가 발생했을 때 장애 발생 직전의 상태로 복구할 수 있어야 함
    - 보안
      - 불법적인 데이터의 노출 또는 변경이나 손실로부터 보호할 수 있어야 함
    - 효율성
      - 응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능해야 함
    - 데이터베이스 확장
      - 데이터베이스 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야 함

  3) 데이터베이스 설계 순서
    - 요구 조건 분석
    - 개념적 설계
    - 논리적 설계
    - 물리적 설계
    - 구현

  4) 요구 조건 분석
    - 데이터베이스를 사용할 사람들로부터 필요한 용도를 파악하는 것
    - 사용자에 따른 수행 업무와 필요한 데이터 종류, 용도, 처리 형태, 흐름, 제약 조건 수집
    - 수집된 정보를 바탕으로 요구 조건 명세 작성

  5) 개념적 설계(정보 모델링, 개념화)
    - 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정
    - 개념 스키마 모델링과 트랜잭션 모델링 병행 수행
    - 요구 조건 명세를 DBMS에 독립적인 E-R 다이어그램으로 작성
    - DBMS에 독립적인 개념 스키마 설계

  6) 논리적 설계(데이터 모델링)
    - 현실 세계에서 발생하는 자료를 특정 DBMS가 지원하는 논리적 자료 구조로 변환(mapping)시키는 과정
    - 개념 스키마를 정제하고 DBMS에 따라 서로 다른 논리적 스키마를 설계하는 단계
    - 트랜잭션의 인터페이스 설계
  
  7) 물리적 설계(데이터 구조화)
    - 논리적 구조로 표현된 데이터를 물리적 구조의 데이터로 변환하는 과정
    - 데이터베이스 파일의 저장 구조 및 액세스 경로 결정
    - 저장 레코드의 형식, 순서, 접근 경로, 조회 집중 레코드 등의 정보를 사용하여 데이터가 컴퓨터에 저장되는 방법 묘사

  8) 데이터베이스 구현
    - 논리적 설계와 물리적 설계에서 도출된 데이터베이스 스키마를 파일로 생성하는 과정
    - 특정 DBMS의 DDL을 이용해 스키마 기술 후 컴파일하여 빈 데이터베이스 파일 생성
    - 응용 프로그램을 위한 트랜잭션을 작성
    - 데이터베이스 접근을 위한 응용 프로그램 작성

31. 데이터 모델의 개념
  1) 데이터 모델
    - 현실 세계의 정보들을 컴퓨터에 표현하기 위해서 단순화, 추상화하여 체계적으로 표현한 개념적 모형
    - 데이터, 데이터의 관계, 데이터의 의미 및 일관성, 제약 조건 등을 기술하기 위한 개념적 도구로 구성
    - 데이터베이스 설계 과정에서 데이터의 구조를 논리적으로 표현하기 위해 지능적 도구로 사용
    - 데이터 모델 구성 요소
      - 개체, 속성, 관계
    - 데이터 모델 종류
      - 개념적 데이터 모델, 논리적 데이터 모델, 물리적 데이터 모델
    - 데이터 모델에 표시할 요소
      - 구조, 연산, 제약 조건
    
  2) 개념적 데이터 모델
    - 현실 세계에 대한 인간의 이해를 돕기 위해 현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정
    - 속성들로 기술된 개체 타입과 이 개체 타입들 간의 관계를 이용해 현실 세계 표현
    - 정보 모델
    - E-R 모델링

  3) 논리적 데이터 모델
    - 개념적 구조를 컴퓨터가 이해하도록 컴퓨터 세계의 환경에 맞도록 변환하는 과정
    - 필드로 기술된 데이터 타입과 이 데이터 타입들 간의 관계를 이용해 현실 세계 표현
    - 데이터 모델
    - 특정 DBMS는 특정 논리적 데이터 모델 하나만 선정하여 사용
    - 관계 표현에 따라 관계 모델, 계층 모델, 네트워크 모델로 구분

  4) 데이터 모델에 표시할 요소
    - 구조(Structure)
      - 논리적으로 표현된 개체 타입들 간의 관계로서 데이터 구조 및 정적 성질 표현
    - 연산(Operation)
      - 데이터베이스에 저장된 실제 데이터를 처리하는 작업에 대한 명세로서 데이터베이스를 조작하는 기본 도구
    - 제약 조건(Constraint)
      - 데이터베이스에 저장될 수 있는 실제 데이터의 논리적인 제약 조건

33. E-R(개체-관계) 모델
  1) E-R(Entity-Relationship, 개체-관계) 모델
    - 개체와 개체 간의 관계를 기본 요소로 이용하여 현실 세계의 무질서한 데이터를 개념적인 논리 데이터로 표현하기 위한 방법
    - 피터 첸
    - 개념적 데이터 모델의 가장 대표적인 것
    - 개체 타입과, 관계 타입을 이용해 현실 세계를 개념적으로 표현
    - 데이터를 개체(Entity), 관계(Relationship), 속성(Attribute)
    - 1:1, 1:N, N:M

34. 관계형 데이터베이스의 구조 / 관계형 데이터 모델
  1) 관계형 데이터베이스
    - 2차원적인 표를 이용해 데이터 상호 관계를 정의하는 데이터베이스
    - 코드가 제안
    - 개체, 관계를 모두 릴레이션이라는 표로 표현, 개체 릴레이션, 관계 릴레이션이 존재
    - 장점 : 간결함, 다른 데이터베이스로 변환이 용이
    - 단점 : 성능이 다소 떨어짐

  2) 관계형 데이터베이스의 릴레이션 구조
    - 릴레이션은 데이터들을 표의 형태로 표현한 것
    - 릴레이션은 스키마 + 릴레이션 인스턴스

  3) 튜플(Tuple)
    - 릴레이션을 구성하는 각각의 행
    - 속성의 모임으로 구성됨
    - 파일 구조에서 레코드와 같은 의미
    - 튜플의 수를 카디널리티, 기수, 대응수라 함

  4) 속성(Attribute)
    - 데이터베이스를 구성하는 가장 작은 논리적 단위
    - 파일 구조상의 데이터 항목 또는 데이터 필드에 해당
    - 개체의 특성 기술
    - 속성의 수를 디그리 또는 차수라고 함

  5) 도메인(Domain)
    - 하나의 애트리뷰트가 취할 수 있는 같은 타입의 원자(Atomic) 값들의 집합
    - 실제 애트리뷰트 값이 나타날 때 그 값의 합법 여부를 시스템이 검사할 때 이용
  
  6) 릴레이션의 특징
    - 릴레이션에 포함된 튜플들은 모두 상이
    - 튜플 순서 없음
    - 튜플들의 삽입, 삭제 등의 작업으로 인해 릴레이션은 시간에 따라 변함
    - 속성 순서 없음
    - 튜플을 유일하게 식별하기 위해 속성들의 부분집합을 키로 설정
    - 속성의 값은 논리적으로 더 이상 쪼갤 수 없는 원자값을 저장

  7) 관계형 데이터 모델(Relational Data Model)
    - 2차원적인 표를 이용해 데이터 상호 관계를 정의하는 DB구조
    - 가장 널리 사용되는 데이터 모델
    - 기본키와 이를 참조하는 외래키로 관계 표현
    - 계층 모델과 망 모델의 복잡한 구조를 단순화시킨 모델
    - SQL
    - 1:1, 1:N, N:M

35. 관계형 데이터베이스의 제약 조건 - 키(Key)
  1) 키(Key)
    - 튜플을 찾거나 정렬할 때 기준이 되는 속성

  2) 후보키(Candidate Key)
    - 속성들 중 튜플을 유일하게 식별하기 위해 사용되는 속성들의 부분집합
    - 기본키로 사용 가능한 속성
    - 유일성, 최소성 만족
    - 유일성 : 하나의 키로 하나의 튜플을 유일하게 식별
    - 최소성 : 꼭 필요한 최소의 속성으로 구성

  3) 기본키(Primary Key)
    - 후보키 중에서 특별히 선정된 주키
    - 중복 X
    - NULL 값 가질 수 없음
  
  4) 대체키(Alternate Key)
    - 후보키가 둘 이상일 때 기본키를 제외한 나머지 후보키
    - 보조키

  5) 슈퍼키(Super Key)
    - 속성들의 집합으로 구성된 키
    - 모든 튜플 중 슈퍼키로 구성된 속성의 집합과 동일한 값은 나타나지 않음
    - 유일성 만족, 최소성 만족하지 않음

  6) 외래키(Foreign Key)
    - 다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합
    
36. 관계형 데이터베이스의 제약 조건 - 무결성(Integrity)
  1) 무결성(Integrity)
    - 데이터베이스에 저장된 값과 현실 세계의 실제값이 일치하는 정확성
    - 무결성 제약 조건은 무결성을 보장하기 위해 부정확한 자료가 데이터베이스 내에 저장되는 것을 방지하기 위한 제약 조건

  2) 무결성의 종류
    - 개체 무결성
      - 기본키를 구성하는 어떤 속성도 NULL이나 중복값을 가질 수 없음
    - 참조 무결성
      - 외래키 값은 NULL이거나 참조 릴레이션의 기본키 값과 동일해야 함
    - 도메인 무결성
      - 정의된 도메인에 속한 값이어야 함
    - 사용자 정의 무결성
      - 속성 값이 사용자가 정의한 제약조건에 만족
    - NULL 무결성
      - 릴레이션의 특정 속성 값이 NULL이 될 수 없음
    - 고유 무결성
      - 특정 속성에 대해 각 튜플이 갖는 속성값들이 서로 달라야 함
    - 키 무결성
      - 하나의 릴레이션에는 적어도 하나의 키가 존재해야 함
    - 관계 무결성
      - 튜플의 삽입 가능 여부 또는 한 릴레이션과 다른 릴레이션의 튜플들 사이의 관계에 대한 적절성 여부 지정함

  3) 데이터 무결성 강화
    - 애플리케이션
      - 데이터 생성, 수정, 삭제 시 무결성 조건을 검증하는 코드를 프로그램 내에 추가
    - 데이테베이스 트리거(이벤트가 발생할 때마다 자동으로 수행되는 절차형 SQL)
      - 트리거 이벤트에 무결성 조건을 실행하는 절차형 SQL 추가
    - 제약 조건
      - 데이터베이스에 제약 조건을 설정하여 무결성을 유지함

37. 관계대수 및 관계해석

	afdssd




